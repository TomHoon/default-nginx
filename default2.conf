# 🔹 Add your custom log format here
log_format custom_api '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    'upstream: $upstream_addr '
                    'method: $request_method '
                    'len: $content_length '
                    'type: $content_type';

# yjw7003.com 전용 
server {
    listen 443 ssl;
    server_name yjw7003.info;

    ssl_certificate /etc/nginx/yjw7003-certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/yjw7003-certs/privkey.pem;

    return 301 https://www.yjw7003.info$request_uri;
}


# www.yjw7003.com 전용 
server {
    listen 443 ssl;
    server_name www.yjw7003.info;

    ssl_certificate /etc/nginx/yjw7003-certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/yjw7003-certs/privkey.pem;

    location /api/ {
        # client_max_body_size 10M; #용량
        # proxy_pass http://172.19.0.6:30000;  # Spring Boot backend container
        proxy_pass http://yjw-container:30000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Frontend (Next.js)
    location / {
        proxy_pass http://yjw-front-container:3000;  # Next.js container
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # sitemap, robots도 Next.js로 넘기기
    location = /robots.txt {
        proxy_pass http://yjw-front-container:3000/robots.txt;
    }

    location = /sitemap.xml {
        proxy_pass http://yjw-front-container:3000/sitemap.xml;
    }
    
   location /uploads/ {
      proxy_pass http://172.19.0.6:30000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      add_header Cache-Control "public, max-age=86400";

       # ✅ Prevent Nginx from treating PDFs as HTML
        types {
            application/pdf pdf;
        }
        default_type application/octet-stream;
    }
}

server {
    listen 80;
    server_name yjw7003.info www.yjw7003.info;

    location / {
        return 301 https://$host$request_uri;
    }
}


#tomhoon 전용

server {
    listen 80;
    listen 443 ssl;
    server_name tomhoon.my;

    ssl_certificate /etc/nginx/tomhoon-certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/tomhoon-certs/privkey.pem;

    return 403;
}


# server {
#     listen 443 ssl;
#     server_name tomhoon.my;

#     ssl_certificate /etc/nginx/tomhoon-certs/fullchain.pem;
#     ssl_certificate_key /etc/nginx/tomhoon-certs/privkey.pem;

#     # Frontend (Next.js)
#     location / {
#         proxy_pass http://172.19.0.5:3000;  # Next.js container
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     # Backend (Spring Boot)
#     location /api/ {
#         proxy_pass http://172.19.0.6:30000;  # Spring Boot backend container
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
    
#    location /uploads/ {
#       proxy_pass http://172.19.0.6:30000;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       add_header Cache-Control "public, max-age=86400";
#     }
# }

# server {
#     listen 80;
#     server_name tomhoon.my;

#     location / {
#         return 301 https://$host$request_uri;
#     }
# }



# ==== daewoo 전용 =======
server {
    listen 80;
    server_name daewoo.digital;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name daewoo.digital;

    ssl_certificate /etc/nginx/daewoo-certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/daewoo-certs/privkey.pem;

    # daewoo.digital/api/files -> daewoo.digital/files
    location /api/ {
        # client_max_body_size 10M; #용량
        # proxy_pass http://172.19.0.6:30000;  # Spring Boot backend container
        proxy_pass http://daewoo-back-container:31250/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        root   /usr/share/nginx/html;
        index index.html;
    }

   location /uploads/ {
      proxy_pass http://daewoo-back-container:31250;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      add_header Cache-Control "public, max-age=86400";

       # ✅ Prevent Nginx from treating PDFs as HTML
        types {
            application/pdf pdf;
        }
        default_type application/octet-stream;
    }
}

# ==== UNIES 전용 =======
server {
    listen 80;
    server_name unies.digital;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name unies.digital;

    ssl_certificate /etc/nginx/unies-certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/unies-certs/privkey.pem;

    # daewoo.digital/api/files -> daewoo.digital/files
    location /api/ {
        # client_max_body_size 10M; #용량
        # proxy_pass http://172.19.0.6:30000;  # Spring Boot backend container
        proxy_pass http://daewoo-back-container:31250/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        root   /usr/share/nginx/html/unies;
        index unies.html;
    }

   location /uploads/ {
      proxy_pass http://daewoo-back-container:31250;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      add_header Cache-Control "public, max-age=86400";

       # ✅ Prevent Nginx from treating PDFs as HTML
        types {
            application/pdf pdf;
        }
        default_type application/octet-stream;
    }
}